== Vascular Atlas Generation and Classification ==
(Caution: This code is highly experimental at this stage)


What is it ?
------------

The directory contains a set of scripts to

1) compute (different types of) atlases for intra-cranial vasculature
2) create a spatial-graph representation of vasculature using the atlas
3) classify spatial-graph representations using graph-kernels in a SVM


References
----------

Please cite the following paper when using the code:

@inproceedings{
    Aylward2006a,
    author = { S.~Aylward and J.~Jomier and C.~Vivert and V.~{LeDigarcher} and E.~Bullit},
    title  = { Spatial graphs for intra-cranial vascular network characterization,
              generation, and discrimination},
    booktitle = {MICCAI '05},
    year      = {2005}}


Scripts
-------

The following three scripts implement all the functionality:

- Download.py : Script to download the data from MIDAS
- ExperimentsDriver.py : Driver script to (step-by-step) run the experiments
- ExpUtils.py : Utility routines that are used by the driver script


Configuration
-------------

There are three important configuration files that need to be edited
before running any of the scripts. We provide the following templates
for them:

- Pydas-Config.json.example   : Settings for connecting to MIDAS
- Data-Config.json.example    : Settings for data storage and grouping
- General-Config.json.example : Settings for accessing executables

We suggest that you make a copy of each file, edit and change the
parameters accordingly and strip-off the '.example' suffix, i.e.,

$ cp Pydas.config.example Pydas.config
$ nano -T 2 Pydas.config

1)  Pydas-Config.json

    This file configures the access to the MIDAS server in
    order to be able to download data by means of the provided
    'Download.py' script. Note: You need to be a registered
    user at

    http://midas3.kitware.com/midas

    to be able to download data. The three parameters (e-mail,
    api_key, url) need to be set to your 'email' address with
    which you registered at the MIDAS server, the 'url' is
    'http://midas3.kitware.com/midas' and the 'api_key' can be
    found under 'Manage Profile' -> API on the MIDAS website
    (see URL above).

2)  Data-Config.json

    This file specifies where the data has been downloaded and
    assigns a label to the data of each individual (for classification).
    The structure of the file is simple: you only need to replace
    '<BaseDir>' with the directory where you downloaded the data
    from MIDAS and change the 'Group' (in case you want to group
    the data by an attribute other than gender) to whatever you
    want the grouping to be.

    {
    "Data":
        [
            {"Source": "<BaseDir>/Normal-003", "Group": "Female"},
            {"Source": "<BaseDir>/Normal-004", "Group": "Female"},
            ...
        ]
    }

3)  General-Config.json

    This file specifies where the TubeTK binaries for running the experiments
    can be found. In fact, you only need to change the placeholder
    <FullPathToTubeTKBuildDirectory> with the full path to the
    'TubeTK-build' directory. The file also contains a setting for the
    number of 'cvtCells' to use (in case they are not specified by the
    user on the command line).


Data
----

The data that is used for the experiments resides within
the 'TubeTK' community on the MIDAS server

    http://midas3.kitware.com/midas/community/7

To browse the data, navigate to

    Public->Public Data Standards->Designed Database of MR Brain Images
    of Healthy Volunteers

To download the relevant files, use the 'Download.py' script. E.g.,
create a directory '/tmp/Data' first, then run the download script
as

$ python Download.py --config Pydas-Config.json --outDir /tmp/data

where Pydas-Config.json is the config file for the MIDAS login
credentials (see Configuration). This should create a directory
structure similar to

    /tmp/data
        |-Normal-002
        |-Normal-003
        |-Normal-004
        ...

The reason why the numbering of the individuals is not continuous is
that we do not have extracted vascular networks for all patients
for which we have MRI / MRA / DTI images. The download script only
downloads the data for those patients for which all relevant files
are available.


Running the experiments
-----------------------

The main script for running the experiments is the 'ExperimentsDriver.py'.
Type

$ python ExperimentsDriver.py --help

to get some help with the command-line parameters. Here's an example
of how to use the ExperimentsDriver.py script in combination with
the Download.py script to produce results for the first stage (1)
, i.e., Registration:

$ mkdir /tmp/Data
$ python Download.py \
    --config /tmp/Pydas-Config.json \
    --outDir /tmp/Data

$ python ExperimentsDriver.py \
    --data /tmp/Data-Config.json \
    --config /tmp/General-Config.json \
    --stage 1 \
    --cvtCells 500 \
    --phantom /tmp/Data/BrainWeb-T1-Phantom.mha \
    --dest /tmp/Output \
    --cvruns 5

Here, all data is first downloaded to '/tmp/Data'. Although
we only run stage 1, i.e., Registration, we specify all CLI
parameters here, just as an example. --cvruns 5 specifies to
run 5-fold cross-validation, --cvtCells 500 specifies to use
500 CVT cells when running the ATLAS generation stage (see
code). All generated data is stored under '/tmp/Output' and
we perform five cross-validation runs.


Contact
-------

For questions, suggestions and/or bug reports, please contact:

Roland Kwitt, E-mail: roland [dot] kwitt [at] kitware [dot] com
